name: 'update schedule'

on:
  schedule:
    - cron: '0 ,06,17 * * *'  
  workflow_dispatch:
    branches:
      - main

jobs:
  push:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main  # 直接使用main分支

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          update-environment: true
          cache: 'pipenv'
          
      - name: Check open_driver config
        id: check_driver
        run: |
          echo "OPEN_DRIVER=$(python -c '
          try:
            from utils.config import config
            open_driver = config.getboolean("Settings", "open_driver")
          except:
            open_driver = False
          print(open_driver)')" >> $GITHUB_ENV
          
      - name: Check open_ffmpeg config
        id: check_ffmpeg
        run: |
          echo "OPEN_FFMPEG=$(python -c '
          try:
            from utils.config import config
            open_ffmpeg = config.getboolean("Settings", "open_ffmpeg")
          except:
            open_ffmpeg = False
          print(open_ffmpeg)')" >> $GITHUB_ENV
          
      - name: Install Selenium
        if: env.OPEN_DRIVER == 'True' || env.OPEN_DRIVER == 'true'
        run: |
          sudo pip3 install selenium
          
      - name: Set up Chrome
        if: env.OPEN_DRIVER == 'True' || env.OPEN_DRIVER == 'true'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
          
      - name: Download chrome driver
        if: env.OPEN_DRIVER == 'True' || env.OPEN_DRIVER == 'true'
        uses: nanasess/setup-chromedriver@master
        
      - name: Launch chrome driver
        if: env.OPEN_DRIVER == 'True' || env.OPEN_DRIVER == 'true'
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          
      - name: Install FFmpeg
        if: env.OPEN_FFMPEG == 'True' || env.OPEN_FFMPEG == 'true'
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
        
      - name: Install pipenv
        run: pip3 install --user pipenv
        
      - name: Install dependecies
        run: pipenv --python 3.8 && pipenv install
        
      - name: Build
        run: pipenv run build
        
      - name: Set final file name
        id: set_final_file
        run: |
          final_file=$(python -c "try:
            from utils.config import config
            print(config.get('Settings', 'final_file'))
          except:
            print('output/result.txt')")
          echo "::set-output name=final_file::$final_file"

      - name: Set final m3u file name
        id: set_final_m3u_file
        run: |
          final_m3u_file=$(python -c "try:
            from utils.config import config
            import os
            final_file = config.get('Settings', 'final_file')
            print(os.path.splitext(final_file)[0] + '.m3u')
          except:
            print('output/result.m3u')")
          echo "::set-output name=final_m3u_file::$final_m3u_file"

      - name: Commit and push if changed
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          # 忽略二进制文件差异
          git checkout --theirs output/result_cache.pkl
          # 添加文件到暂存区
          if [[ -f "${{ steps.set_final_file.outputs.final_file }}" ]]; then
            git add -f "${{ steps.set_final_file.outputs.final_file }}"
          fi
          if [[ -f "${{ steps.set_final_m3u_file.outputs.final_m3u_file }}" ]]; then
            git add -f "${{ steps.set_final_m3u_file.outputs.final_m3u_file }}"
          fi
          # 添加其他可能存在的文件到暂存区
          # ... (添加其他文件的逻辑)
          # 如果有更改，则提交并推送
          if ! git diff --staged --quiet; then
            git commit -m "Github Action Auto Updated"
            git push origin main --force  # 指定分支并强制推送
          fi

      - name: 提交更改
        run: |
          git config --local user.email "vjfchen@sina.com"
          git config --local user.name "mlzlzj"
          git add .
          # git commit *.txt -m "Add generated file"
          #git pull --rebase
          git push -f
